s
	type main '(' ')' codeblockplus
	;

codeblockplus
	'{' codeblock '}'
	;
	
codeblock
	statement
	statement codeblock
	;
	
statement
	';'
	assign_statement ';'
	declare_statement ';'
	control_statement
	;

type
	char_type {x.top.type=char ; x.top.width=1}
	int_type {x.top.type=int ;x.top.width=2}
	void_type {x.top.type = void,x.top.width=0}
	;

multi_id
	id{top.if_matrix=0,top.name=id.name}
	matrix_id {top.if_matrix=1 top.name=matrix_id.name}
	;

declare_statement
	type multi_id 
	{
		enter(top.name,top.if_matrix,top-1.type,mdevelop);
		sum_offset=sum_offset+type.width;
	}
	;

matrix_id //仅声明时使用
	id '[' int ']' 
	{
		top-3.matrix_develop=new matrix_develop ; 
		top-3.matrix_develop.sum_weishu=1 ; 
		top-3.matrix_develop.weishu[sum_weishu]=int ; 
		top=top-3
	}
	id '[' int ']' multi_weishu 
	{
		top-4.matrix_develop=top.matrix_develop ;
		top-4.matrix_develop.sum_weishu+1;
		top-4.matrix_develop.weishu[sum_weishu]=int ; 
		top=top-4
	}
	;

multi_weishu(文法修改)
	'[' int ']' 
	{
		top-2.matrix_develop=new matrix_develop;
		top-2.matrix_develop.sum_weishu=1 ; 
		top-2.matrix_develop.weishu[sum_weishu]=int ;
		top=top-2;
	}
	'[' int ']' multi_weishu
	{
		top-3=top;
		top.matrix_develop.sum_weishu++;
		top.matrix_develop.weishu[sum_weishu]=int;
		top=top--3;
	}
	;

assign_statement
	id '=' math_statement
	id '=' zifu
	matrix_id '=' math_statement
	matrix_id '=' zifu
	;

zifu
	char
	string
	;

math_statement
	math_item
	math_statement '+' math_item
	math_statement '-' math_item
	;

math_item
	math_basic
	math_item '*' math_basic
	math_item '/' math_basic
	math_item '%' math_basic
	;

math_basic
	id
	matrix_id
	int
	'(' math_statement ')'
	'++' math_basic
	math_basic '++'
	'--' math_basic
	math_basic '--'
	;
	
logic_statement
	logic_mid
	logic_statement '||' logic_mid
	;

logic_mid
	logic_basic
	'!' logic_mid
	logic_basic '&&' logic_mid
	;
	
logic_basic
	math_statement
	logic_basic logic_op math_statement
	'(' logic_statement ')'
	;
	
logic_op
	'>='
	'<='
	'>'
	'<'
	'=='
	'!='
	;
	
control_statement
	if_statement
	while_statement
	for_statement
	;
	
if_statement
	if '(' logic_statement ')' codeblockplus
	if '(' logic_statement ')' codeblockplus elseif_statement
	if '(' logic_statement ')' codeblockplus elseif_statement else_statement
	if '(' logic_statement ')' codeblockplus else_statement
	;

elseif_statement
	else if '(' logic_statement ')' codeblockplus
	elseif_statement else if '(' logic_statement ')' codeblockplus
	;
	
else_statement
	else codeblockplus
	;

while_statement
	while '(' logic_statement ')' codeblockplus
	;

for_statement
	for '(' assign_statement ';' logic_statement ';' assign_statement ')' codeblockplus
	for '(' ';' logic_statement ';' assign_statement ')' codeblockplus
	for '(' assign_statement ';' ';' assign_statement ')' codeblockplus
	for '(' assign_statement ';' logic_statement ';' ')' codeblockplus
	for '(' assign_statement ';' ';' ')' codeblockplus
	for '(' ';' logic_statement ';' ')' codeblockplus
	for '(' ';' ';' assign_statement ')' codeblockplus
	for '(' ';' ';' ')' codeblockplus
	;